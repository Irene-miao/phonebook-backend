{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Persons.js","services/backend.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","props","className","onSubmit","value","onChange","valueNo","onChangeNo","type","Filter","Persons","persons","handleDelete","map","person","name","number","onClick","id","baseUrl","backend","getAll","axios","get","then","response","data","create","newObject","post","remove","delete","update","put","Notification","message","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchName","setSearchName","newMessage","setNewMessage","useEffect","console","log","notify","setTimeout","personsToShow","length","filter","toLowerCase","indexOf","event","target","preventDefault","existing","find","p","window","confirm","returnedPerson","addPerson","concat","catch","error","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.391f3ea7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <div>\r\n             <form className='form' onSubmit={props.onSubmit}>\r\n        <div>\r\n          name: \r\n          <input \r\n          value={props.value}\r\n         onChange={props.onChange} \r\n         />\r\n        </div>\r\n        <div>\r\n          number: \r\n          <input \r\n          value={props.valueNo}\r\n         onChange={props.onChangeNo} \r\n         />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div className='form'>\r\n      filter shown with\r\n      <input value={props.value} onChange={props.onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\n\r\nconst Persons = ({persons, handleDelete}) => {\r\n\r\n    return (\r\n      persons.map(person => \r\n        <p className='note' key={person.id}>\r\n        {person.name} &nbsp; {person.number}\r\n        &nbsp;\r\n        <button onClick={() => handleDelete(person.id)}>delete</button>\r\n        </p>\r\n      )\r\n      )\r\n}\r\n\r\nexport default Persons;\r\n","\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst backend = {\r\n    \r\n\r\n     getAll: () => {\r\n        const request =  axios.get(baseUrl);\r\n        return request.then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n\r\n    \r\n     create: (newObject) => {\r\n        const request =  axios.post(baseUrl, newObject);\r\n        return request.then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n    \r\n    \r\n    remove: (id) => {\r\n    const request =  axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => {\r\n        return response.data\r\n    });\r\n    },\r\n\r\n    update: (id, newObject) => {\r\n        const request =  axios.put(`${baseUrl}/${id}`, newObject);\r\n        return request.then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n};\r\n\r\n\r\n\r\nexport default backend;\r\n","import React from 'react';\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    };\r\n\r\n    return (\r\n        <div className='notification'>\r\n            {message.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport PersonForm from \"./components/PersonForm\";\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Persons\";\nimport backend from \"./services/backend\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [newMessage, setNewMessage] = useState(null);\n\n  useEffect(() => {\n    console.log(\"effect\");\n    backend\n    .getAll()\n    .then((data) => {\n      console.log(data);\n      setPersons(data);\n    });\n  }, []); // First render once\n\n  const notify = (message, type = \"success\") => {\n    setNewMessage({ message, type });\n    setTimeout(() => {\n      setNewMessage(null);\n    }, 5000);\n  };\n\n  // Create new Person Object\n  const addPerson = (event) => {\n    event.preventDefault();\n    const existing = persons.find((p) => p.name === newName); // Find person in phonebook\n    if (existing) {\n      // If person exist in phonebook, pop up dialog\n      const ok = window.confirm(\n        `${existing.name} in phonebook, replace the old number with new one?`\n      );\n      if (ok) {\n        // if dialog ok button clicked, update phonebook\n        backend\n          .update(existing.id, {\n            name: existing.name,\n            number: newNumber,\n          })\n          .then((returnedPerson) => {\n            console.log(returnedPerson);\n            setPersons(\n              persons.map((p) => (p.id !== existing.id ? p : returnedPerson))\n            ); // Set persons state to new array contain old persons array + updated person\n            notify(`Changed ${existing.name} 's phone number`);\n            setNewName(\"\");\n            setNewNumber(\"\");\n          });\n      }\n    } else {\n      // If person not in phonebook, create new\n      backend\n        .create({\n          // Create  Person object\n          name: newName,\n          number: newNumber,\n        }) // Object sent to server using axios post method\n        .then((addPerson) => {\n          setPersons(persons.concat(addPerson)); //Save response sent from server to variable\n          notify(`Added ${newName}`);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((error) => {\n          console.log(error.response.data.error);\n          notify(`${error.response.data.error}`, \"error\");\n        });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleSearchNameChange = (event) => {\n    console.log(event.target.value);\n    setSearchName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  const handleDelete = (id) => {\n    const toDelete = persons.find((p) => p.id === id);\n    const ok = window.confirm(`Do you want to delete ${toDelete.name}?`);\n    if (ok) {\n      backend\n        .remove(id)\n        .then((response) => {\n          setPersons(persons.filter((person) => person.id !== id));\n          notify(`Deleted ${toDelete.name}`);\n        })\n        .catch(() => {\n          setPersons(persons.filter((person) => person.id !== id));\n          notify(`${toDelete.name} was removed`, \"error\");\n        });\n    }\n  };\n\n  const personsToShow =\n    searchName.length === 0\n      ? persons\n      : persons.filter((person) =>\n          person.name.toLowerCase().indexOf(searchName.toLowerCase() > 0)\n        );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={newMessage} />\n      <Filter value={searchName} onChange={handleSearchNameChange} />\n\n      <h3>Add a new person details</h3>\n\n      <PersonForm\n        onSubmit={addPerson}\n        value={newName}\n        onChange={handleNameChange}\n        valueNo={newNumber}\n        onChangeNo={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <div>\n   \n              <Persons\n                persons={personsToShow}\n                handleDelete={handleDelete}\n              />\n     \n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n  \n\n\n\n\n\n"],"sourceRoot":""}